For the Python D&D 5E Project:

1. Use classes to modify states of a Character
 - Levels as states (level up class method, hitpoints, multiclassing easier)
 - combat state (initiative, combat actions as instances, such as dodge)
 - advantage/disadvantage state
 - status conditions: use class to define them and use Aggregation(/Association?) to link them to Character
 - death saves (part of unconscious state)
 - conecentration state
 - rage state (for barbarian)
 - inspiration state (created through Bard)
 - spells that cause states, like faerie fire (class method?)
 - Use composition for Race and Classes, inheritance for the Subclasses and Subraces

2. Monster class to define monsters from the monster manual (use Beholder for example)
 - combat state to define lair actions during initiative
 - attacks based on monster properties

3. Weapons class, Armor class
 - Use Association to create Weapons class, Armor class (maybe Spellcasting?)
 - don't forget damage types (nonmagical and magical)
 - divide weapons into their separate types, define if proficiency with them is true or not
 - divide armor into their separate types (light, medium, heavy)

4. Subclasses as child class of Classes (1 per character class)
 - think about multiclassing (probably not doing this)

5. Inventory
 - Use composition to create Inventory class
 - equip weapons, armor and items through Inventory
 
6. Issues:
 - how to use weapons according to the ability modifiers of a Character object
 - condense to a single file? ...probably better
 - create a Character first, save informations in database
 - have a database with Monster class composed of monsters
 - have different file for combat, add selected Character and Monster objects to initiative order
 - how to make attacks that have to roll to hit, and how many hit points are subtracted
 - resistances and status conditions (saving throws come into play here?)
 
7. Subclasses:
 - berserker barbarian
 - college of lore bard
 - life domain cleric
 - circle of the moon druid
 - champion fighter
 - way of the open hand monk
 - oath of vengeance paladin
 - assassin rogue
 - wild magic sorcerer
 - hexblade warlock
 - school of evocation wizard

From python.org:
"Classes provide a means of bundling data and functionality together. 
Creating a new class creates a new type of object, allowing new instances of that type to be made. 
Each class instance can have attributes attached to it for maintaining its state.
Class instances can also have methods (defined by its class) for modifying its state."

USE CLASS METHODS WHEN YOU NEED SOMETHING FOR THE CLASS